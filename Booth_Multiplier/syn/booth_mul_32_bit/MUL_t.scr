##############################################################
#SCRIPT FOR SPEEDING UP and RECORDING the MULTIPLIER SYNTHESIS#
# analyzing and checking vhdl netlist#
# here the analyze command is used for each file from bottom to top #
##############################################################
remove_design -designs
analyze -library WORK -format vhdl {constants.vhd}
analyze -library WORK -format vhdl {functions.vhd}
analyze -library WORK -format vhdl {iv.vhd}
analyze -library WORK -format vhdl {nd2.vhd}
analyze -library WORK -format vhdl {mux21.vhd}
analyze -library WORK -format vhdl {fa.vhd}
analyze -library WORK -format vhdl {mux21_generic.vhd}
analyze -library WORK -format vhdl {nd2.vhd}
analyze -library WORK -format vhdl {rca.vhd}
analyze -library WORK -format vhdl {pg_block.vhd}
analyze -library WORK -format vhdl {g_block.vhd}
analyze -library WORK -format vhdl {pg_network.vhd}
analyze -library WORK -format vhdl {cs_block.vhd}
analyze -library WORK -format vhdl {carry_select.vhd}
analyze -library WORK -format vhdl {sparse_tree.vhd}
analyze -library WORK -format vhdl {p4_adder.vhd}
analyze -library WORK -format vhdl {neg_data.vhd}
analyze -library WORK -format vhdl {booth_encoder.vhd}
analyze -library WORK -format vhdl {mux_5_to_1_generic.vhd}
analyze -library WORK -format vhdl {booth_multiplier.vhd}


##############################################################
# elaborating the top entity -- here supposed BOOTHMUL#
# choose the architecture you want
elaborate BOOTH_MULTIPLIER -architecture STRUCT 
##########################################
# first compilation, without constraints #
compile 
# reporting riming and power after the first synthesis without constraints #
report_timing > rca_timeopt_1t.rpt
report_area > rca_timeopt_1a.rpt
# forces a combinational max delay of REQUIRED_TIME from each of the inputs
# to each of th eoutput, that is a delay lower than the one found after
# the first compilation step #
# often this is the working clock period of your system #
set_max_delay 3.37 -from [all_inputs] -to [all_outputs]
# optimize
compile -map_effort high
# save report
report_timing > booth_mul_timeopt_2t.rpt
report_area > booth_mul_2a.rpt
# saving files
write -hierarchy -format ddc -output BOOTHMUL-structural-topt.ddc
write -hierarchy -format vhdl -output BOOTHMUL-structural-topt.vhdl
write -hierarchy -format verilog -output BOOTHMUL-structural-topt.v
